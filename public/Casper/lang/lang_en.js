const en = {
	local: 'en-gb',
	title: {
		settings: {
			password: 'Password',
			information: 'Personal informations',
			question: 'Secret question',
		},
		Users: 'Users',
		Signs: 'Signs',
	    Groups: 'Groups',
	    Tsp: 'TSP',
	    Cards: 'Cards',
	    DlcSous: 'DLC Subscriptions',
	    DlcActiv: 'DLC Operations',
	},
	button: {
	    add: 'Add',
	    cancel: 'Cancel',
	    close: 'Close',
	    save: 'Save',
	    delete : 'Delete',
	    logout: 'Logout',
	    settings: 'Profile',
	    update: 'Update',
	    rappro: 'Link',
	    force: 'Force',
	},
	qbe: {
		commons: {
			criteria: 'Criteria',
			operators: 'Operator',
			values: 'Value',
		},
		criteria: {
			product: 'Product reference',
			distributor: 'Distributor reference',
			offer: 'Offer reference',
			pan: 'Card number',
			contract: 'Contract number',
			codeId: 'Activation code',
			holderRef: 'Holder reference',
			status: 'Status',
		},
		operators: {
			equals: 'Equals',
			notequals: 'Not equals',
			start: 'Start with',
			contains: 'Contains',
		},
		values: {
			waiting_building: 'Waiting building',
			building: 'Building asked',
			blocked: 'Blocked',
			activated: 'Activated',
			shipped: 'Shipped',
			expired: 'Expired',
			irrev_blocked: 'Irreversible blocked',
		},
	},
	messages: {
	    search: 'Search ...',
	    advancedSearch: 'Advanced search',
	    created: 'Created',
	    by: 'by',
	    lastModification: 'Last modification',
	    deleteConfirm: 'Are you sure you want to delete this item ?',
	    creation: 'Creation',
	    modification: 'Modification',
	    consultation: 'Consultation'
	},
	errors: {
	    emptydata: 'No data available',
	    nodata: 'Technical problem, no data',
	    delete: 'Problem while deleting data',
	    update: 'Problem while updating data',
	    create: 'Problem while creating data',
	    rules: 'Forbidden view.',
	    410: 'Dependency exists, deletion is not possible.',
	    ERR_BAD_REQUEST: 'Unable to communicate with the server.',
	    ECONNABORTED: 'Response time too high, please refine your search.',
	    ERR_BAD_RESPONSE: 'Unable to communicate correctly with the server.',
	},
	lists: {
		genders: {
		    m: 'Mr',
		    mme: 'Mrs',
		    mle: 'Ms',
		},
		questions: {
			firstanimalname: 'What is the name of your first pet ?',
			firstcarbrand: 'What is the brand of your 1st car ?',
			birthcity: 'What is your birthplace ?',
			bug: 'How many anomalies does Bastien declare per day?',
		},
		permissions: {
		    no: 'Forbidden',
		    read: 'Read',
		    write: 'Write',
		    advanced: 'Advanced',
		},
		realms: {
		    local: 'Local',
		    sso: 'SSO',
		},
		status: {
		    enable: 'Enable',
		    disable: 'Disabled',
		    block: 'Blocked',
		    enabled: 'Enabled',
		    disabled: 'Disabled',
		},
	},
	menu: {
	    security: 'Security',
	    users: 'Users',
	    groups: 'Groups',
	    signs: 'Signatures',
	    cards: 'Cards',
	    params: 'Parameters',
	    products: 'Products',
	    offers: 'Offers',
	    tsp: 'TSP',
	    contract: 'Contracts',
	    dlc: 'DLC Tasks',
	    sousDlc: 'Subscriptions',
	    actiDlc: 'Operations',
	    transaction: 'Transactions',
	    autos: 'Autorisations',
	    opes: 'Operations',
	    search: 'Search',
	},
	commons: {
		holder: {
		    holderRef: 'Holder ref',
		    gender: 'Gender',
		    name: 'Name',
		    firstname: 'First name',
		    lastname: 'Last name',
		    email: 'Email',
		},
	    signs: {
	        title: 'Signs CRUD',
	        ref: 'Reference',
	        keyFile: 'Key file',
	        exp: 'Expiration',
	        debug: 'Debug',
	        timeLimit: 'Time limit',
	        timeLimitUnit: 'seconds',
	        groupDistrib: 'Distribution groups',
	    },
		security: {
		    login: 'Login',
		    password: 'Password',
		    realm: 'Realm',
		    group: 'Group',
		    rules: 'Security rules',
		    questions: 'Secret question',
		    answer: 'Answer',
		},
		cards: {
	        contract: 'Contract',
	        distrib: 'Distributor ref',
	        product: 'Product ref',
	        offer: 'Offer ref',
	    },
		tsp: {
	        ref: 'Reference',
	        label: 'Label',
	        vintage: 'Vintage',
	        multiAccount: 'Multi account',
	        additionalPayment: 'With additional payment',
	    },
		dlc: {
			date: 'Date',
		    ref: 'Reference',
		    pages: 'Pages',
		    count: 'Quantity',
		    failed: 'Failed',
		    format: 'Format',
		    status: 'Status',
		},
		transac: {
			date: 'Date',
		    card: 'Card Number',
		    type: 'Operation type',
		    amount: 'Amount',
		    numAuto: 'Autorisation number',
		    code: 'Return code',
		    siret: 'SIRET number',
		    holder: 'Holder ref',
		},
		rappro: {
			type: 'Type',
			product: 'Product',
			pan: 'Card number',
			originalAmount: 'Original currency amount',
			euroAmount: 'Euros amount',
			validation: 'Control',
			nbAutos: 'Autorizations linkable',
			delta: 'Delta',
		},
		others: {
			date: 'Date',
		    status: 'Status',
		    action: 'Actions',
		    ref: 'Reference',
		},
	}
  }